---
import type { Article } from '@lib/article/types'
import { Markdown } from 'astro-remote'
import Avatar from '@components/avatar/avatar.astro'

interface Props {
	article: Article
}

const { article } = Astro.props

const actionManager = Astro.locals.actionManager

actionManager.setContext({ ...actionManager.getContext(), article })
---

<article class='prose max-w-7xl p-5'>
	<div class='flex place-content-between'>
		<Avatar
			avatar={article.author?.avatar ?? 'https://cdn.jsdelivr.net/gh/alohe/memojis/png/vibrent_7.png'}
			name={article.author?.name ?? 'Unknown'}
			email={article.author?.email ?? 'Unknown'}
		/>
		<div class='flex
			flex-row
			gap-5
			place-content-end'>
			{
				actionManager.canExecute('article.edit') && (
					<a class='btn btn-warning' href={`/articles/edit/${article.id}`}>
						Edit
					</a>
				)
			}
			{
				actionManager.canExecute('article.delete') && (
					<form method='POST' action={`/api/articles/delete/${article.id}`}>
						<button type='submit' class='btn btn-danger'>
							Delete
						</button>
					</form>
				)
			}
		</div>
	</div>
	<div class='max-h-[350px] overflow-hidden'>
		<Markdown content={article.content} />
	</div>

	<a class='btn btn-ghost w-full' href={`/articles/${article.id}`} data-astro-prefetch>Read more</a>
</article>

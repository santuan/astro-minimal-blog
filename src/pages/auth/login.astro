---
import Layout from '@layout/layout.astro'
import { lucia } from '@lib/auth/auth'
import { User, eq, db } from 'astro:db'
import { Argon2id } from 'node_modules/oslo/dist/password/argon2id'

const formErrors: Record<string, string> = {}
const formValues: Record<string, string> = {}

if (Astro.request.method === 'POST') {
	const formData = await Astro.request.formData()
	const email = (formData.get('email') as string).trim()
	const password = formData.get('password') as string

	if (typeof email !== 'string' || email.length < 3 || email.length > 255 || !/.+@.+\..+/.test(email)) {
		formErrors.email = 'Invalid email address'
	}

	if (typeof password !== 'string' || password.length < 6 || password.length > 255) {
		formErrors.password = 'Password must be at least 6 characters long'
	}

	const existingUser = await db.select().from(User).where(eq(User.email, email.toLowerCase())).get()

	if (!existingUser) {
		formErrors.email = 'User not found'
	}

	const validPassword = existingUser ? await new Argon2id().verify(existingUser.hashed_password, password) : false

	if (!validPassword) {
		formErrors.password = 'Invalid password'
	}

	if (Object.keys(formErrors).length === 0 && existingUser && validPassword) {
		formValues.email = email
		const session = await lucia.createSession(existingUser.id, {})
		const sessionCookie = lucia.createSessionCookie(session.id)
		Astro.cookies.set(sessionCookie.name, sessionCookie.value, sessionCookie.attributes)
		return Astro.redirect('/')
	}
}

const haveErrors = Object.keys(formErrors).length > 0
---

<Layout>
	<section class='flex place-content-center'>
		<article class='flex flex-col min-w-sm xl:max-w-7xl'>
			<form class='flex flex-col gap-5 min-h-full' method='POST'>
				<h1 class='text-2xl font-bold mx-auto'>Login</h1>
				<label
					class={formErrors?.email
						? 'input input-error input-bordered flex items-center gap-2'
						: 'input input-bordered flex items-center gap-2'}
				>
					<svg
						xmlns='http://www.w3.org/2000/svg'
						viewBox='0 0 16 16'
						fill='currentColor'
						class='h-4 w-4 opacity-70'
					>
						<path
							d='M2.5 3A1.5 1.5 0 0 0 1 4.5v.793c.026.009.051.02.076.032L7.674 8.51c.206.1.446.1.652 0l6.598-3.185A.755.755 0 0 1 15 5.293V4.5A1.5 1.5 0 0 0 13.5 3h-11Z'
						></path>
						<path
							d='M15 6.954 8.978 9.86a2.25 2.25 0 0 1-1.956 0L1 6.954V11.5A1.5 1.5 0 0 0 2.5 13h11a1.5 1.5 0 0 0 1.5-1.5V6.954Z'
						></path>
					</svg>
					<input
						type='text'
						class='grow'
						placeholder='Email'
						name='email'
						id='email'
						value={formValues?.email ?? ''}
					/>
				</label>
				<label
					class={formErrors?.password
						? 'input input-error input-bordered flex items-center gap-2'
						: 'input input-bordered flex items-center gap-2'}
				>
					<svg
						xmlns='http://www.w3.org/2000/svg'
						viewBox='0 0 16 16'
						fill='currentColor'
						class='h-4 w-4 opacity-70'
					>
						<path
							fill-rule='evenodd'
							d='M14 6a4 4 0 0 1-4.899 3.899l-1.955 1.955a.5.5 0 0 1-.353.146H5v1.5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1-.5-.5v-2.293a.5.5 0 0 1 .146-.353l3.955-3.955A4 4 0 1 1 14 6Zm-4-2a.75.75 0 0 0 0 1.5.5.5 0 0 1 .5.5.75.75 0 0 0 1.5 0 2 2 0 0 0-2-2Z'
							clip-rule='evenodd'></path>
					</svg>
					<input
						type='password'
						class={formErrors?.password ? 'input-error grow' : 'grow'}
						placeholder='********'
						id='password'
						name='password'
					/>
				</label>
				{
					haveErrors && (
						<div role='alert' class='alert alert-warning'>
							<svg
								xmlns='http://www.w3.org/2000/svg'
								class='h-6 w-6 shrink-0 stroke-current'
								fill='none'
								viewBox='0 0 24 24'>
								<path
									stroke-linecap='round'
									stroke-linejoin='round'
									stroke-width='2'
									d='M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z'
								/>
							</svg>
							<span>
								{Object.entries(formErrors)
									.map(([_k, v]) => `${v}`)
									.join(', ')}
							</span>
						</div>
					)
				}
				<button class='btn btn-primary w-full'>Continue</button>
			</form>
			<div class='divider'>or</div>
			<a class='btn btn-secondary w-full' href='/auth/signup'>Singup</a>
		</article>
	</section></Layout
>
